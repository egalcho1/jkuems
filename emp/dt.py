class Employe(models.Model):
    un=models.ForeignKey(User,on_delete=models.CASCADE,null=True)
    username=models.CharField(max_length=255,null=True)
    fname=models.CharField(max_length=255,null=True)
    lname=models.CharField(max_length=255,null=True)
    gender=models.CharField(max_length=255,null=True)
    age=models.DateField(null=True)
    phone=models.IntegerField(null=True)
    email=models.EmailField(null=True)
    salary=models.IntegerField(null=True)
    exp=models.IntegerField(null=True)
    role=models.CharField(max_length=255,null=True)
    gfrom=models.CharField(max_length=255,null=True)
    gyear=models.DateField(null=True)
    bimage=models.ImageField(upload_to="image",null=True)
    certicate=models.ImageField(upload_to="certificate",null=True)
    valid=models.BooleanField(default=True)
    bcmgpa=models.IntegerField(null=True)
    bach=models.DateField(null=True)
    msc=models.DateField(null=True)
    phd=models.DateField(null=True)
    mimage=models.ImageField(upload_to="certificate",null=True)
    pimage=models.ImageField(upload_to="certificate",null=True)
    mcmgpa=models.IntegerField(null=True)
    pcmgpa=models.IntegerField(null=True)
    dt=models.DateField(auto_now=True)
    def __str__(self):
        return self.username
    'first_name','last_name','date','phone','email','ranking','profession','status','username','shift','gender','age','salary','exp','image'
    
    image = models.CharField(max_length=100,null=True)
image.contribute_to_class(User, 'image')
salary= models.IntegerField(null=True)
salary.contribute_to_class(User, 'slary')
profession = models.CharField(max_length=255,null=True)
profession.contribute_to_class(User, 'profession')
phone = models.IntegerField(null=True)
phone.contribute_to_class(User, 'phone')
rank = models.IntegerField(null=True)
rank.contribute_to_class(User, 'rank')
status = models.CharField(choices=types,max_length=20,null=True,blank=False,default='employee')
status.contribute_to_class(User, 'status')
present = models.BooleanField(default=False)
present.contribute_to_class(User, 'present')
updated = models.DateTimeField(auto_now=True)
updated.contribute_to_class(User, 'updated')
shift = models.TimeField(null=True)
shift.contribute_to_class(User, 'shift')
gender=models.CharField(max_length=255,null=True)
gender.contribute_to_class(User, 'gender')
age=models.DateField(null=True)
age.contribute_to_class(User, 'age')
exp=models.IntegerField(null=True)
exp.contribute_to_class(User, 'exp')
